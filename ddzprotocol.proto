option java_package = "com.gaoinvest.api.protocol";
option java_outer_classname = "DdzProtocol";
package protocol;
import "protocol.proto";

// 102101 登录
message DdzLoginRequest{
    required string roomId = 1;   //房间Id
	optional int32 isOuter = 2;     //是否因为房间人员已满作为外围玩家登陆  (未开始游戏前 游戏玩家 0； 外围玩家 1；) 房间中玩家 2；
	optional int32 uid = 3;         //外围玩家所申请要看的游戏玩家uid
	optional int32 cfgId = 4;  			//配置ID
}

//登陆返回消息
message DdzLoginResponse{
	required DdzRoom room = 1;           //房间信息
    repeated DdzPlayer Player = 2;       //玩家信息
    optional RoomConfig roomConfig = 3;  //房间配置
	optional  int32 isOuter = 4;        //是否属于外围玩家  0 游戏玩家 1 外围玩家
	repeated int32 watchUid = 5;       //正在看我牌的外围玩家
}

//房间配置
message RoomConfig{
    repeated Checkbox checkbox = 1; //选择框
    repeated Radio radio = 2;       //单选框
}

message DdzRoom{
    required string roomId = 1;      //房间Id
    required int32 type = 2;         //房间类型
    required string roomName = 3;    //房间名称
    required int32 startTime = 4;    //开始时间(单位：秒)
    required int32 countdown = 5;    //倒计时
    required bool isplaying = 6;     //是否在游戏中
    required int32 dzSeat = 7;       //地主座位号
    required int32 turnSeat = 8;     //当前操作的座位号(玩牌中才有效)
    required int32 totalRound = 9;   //总共几局
    required int32 round = 10;       //当前第几局
	optional int32 status = 11;      //房间状态(1:抢地主中;2加倍中;3:玩牌中;)
	optional int32 roomScore=12;       //房间底分
	optional int32 initialMultiple = 13;//初始倍数
	optional int32 matchingCountdown = 14;//匹配倒计时
	optional bool  crossSiteMatching = 15;//是否跨场地匹配 true 是 false不是
	optional int32 cfgId = 16;
	optional int32 ticketCurrency = 17 ; //台费
}

message DdzPlayer{
    required int32 uid = 1;       	//UID
    required string nickName = 2; 	//昵称
    required string avatar = 3;   	//头像
    required int32 seat = 4;      	//座位
    required int32 score = 5;     	//分数
    required bool online = 6;     	//是否在线
    repeated DdzCard cards = 7;    //牌信息
    required int32 gender = 8;      //性别
    required string ip = 9;      	//玩家IP
    required int32 readyState = 10; //准备状态(0:未准备;1:已准备;2:玩牌中;3:抢地主中;4:加倍中)
	optional Multiple mult = 11;    //倍数详情
	optional int32 laizi = 12;      //赖子value 真实牌 2-16
	optional int32 doubles = 13;     //是否加倍 0 还未选择；1 选择加倍 2：选择不加倍
	optional bool mingpai = 14;     //是否明牌
	optional GrabDzInfo grabDzInfo = 15;     //抢地主信息
	optional LastChuPaiInfo cpInfo = 16;     //出牌信息
	optional int32 isOuter = 17;   		 //是否属于外围玩家  0 游戏玩家 1 外围玩家
	repeated DdzBuyMaList bmList = 18;  //买马的集合
	optional bool applyWatch = 19;  	 // 当前是否属于外围玩家申请所看牌 true false
	optional NewChuPaiInfo newChuPaiInfo = 20;  //当前玩家最新出牌信息(只用来做客户端展示)
	optional bool hosting = 21;  // 是否属于托管状态  true false
	optional int32 totalMultiple = 22;   //总得倍数
	optional bool isrobot = 23;  // false 真人 true 机器人
	optional int32 showScoreNum1 = 24;//跨场次时显示虚拟分数1
	optional int32 showScoreNum2 = 25;//跨场次时显示虚拟分数2
}

message GrabDzInfo{
	optional int32 type = 1;         //当前玩家最新抢地主状态 0:还没抢;1:抢地主;2不抢
    optional int32 opSeat = 2;      //当前操作座位号
	optional int32 order = 3;       //请求序号 请求地主的order值
}

message LastChuPaiInfo{
	optional int32 seat = 1;         //最新出牌的玩家座位号(已经出过牌了) 如果为0->根据nextSeat来判断谁出牌
    repeated int32 values = 2;       //出的牌Values 1-54
	repeated int32 realValues = 3;   //出的牌真实代表值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼)
	optional int32 nextSeat = 4;     //当前操作出牌玩家的座位号 -> 为0 牌局结束
	
}

message NewChuPaiInfo{
	optional bool isChuPai = 2;      //是否出牌 true 出牌; false 过；
    repeated int32 values = 3;       //玩家最新出牌 1-54
	repeated int32 realValues = 4;   //玩家最新出牌 出的牌真实代表值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼)
}

message DdzCard{
    required int32 value = 1;      //牌的数值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼)
    required int32 type = 2;       //牌的类型 (1:黑心;2:红桃;3:梅花;4:方片,5:鬼)
    required int32 state = 3;      //状态(1:手上的牌; 2:打掉的牌;3: 底牌)
}

// 102102 准备
message DdzReadyRequest{

}

// 准备返回数据(广播)
message DdzReadyResponse{
    required int32 seat= 1;  //准备的玩家座位号
}

// 102103 游戏开始 服务端主动推送 发牌
message DdzStartResponse{
    required int32 totalRound = 1;  	//总局数
    required int32 round = 2;       	//局数
    required int32 score = 3;       	//分数
	required int32 seat = 4;			//发牌起点玩家（开始抢地主）
	repeated int32 cards = 5;    	    //牌数组 1-54
	repeated int32 theCards = 6; 	    //底牌 1-54
	required Multiple mult = 7;         //倍数详情
	optional int32 ticketCoin = 8;	    //金币场开局所需金币分数  (前端计算)
	optional int32 robotCountdown = 9;  //金币场倒计时,时间到服务端决定叫不叫地主
	optional int32 totalMultiple = 10;  //总得倍数
	repeated OtherCards otherCards = 11;//其他玩家的牌
}

//把其他牌告诉机器人
message OtherCards{
	repeated int32 cards = 1;    	    //牌数组 1-54
}

message Multiple{
	required int32 difen = 1;       	 //底分 默认为1
	required int32 grabDzMult = 2;       //抢地主倍数 默认为1
	required int32 mingPaiMult = 3;      //明牌倍数	默认为1
	required int32 chunTianMult = 4;     //春天倍数	默认为1
	required int32 bombMult = 5;         //炸弹倍数	默认为1
	required int32 dzMult = 6;           //地主倍数	默认为1
	repeated Farmer farmer = 7;          //农民倍数	默认为1
	required int32 initialmultiple = 8;      //初始倍数 默认为1
}

message Farmer{
	optional int32 seat = 1;
	optional int32 farmerMult = 2;
}

// 102104 明牌
message DdzMingPaiRequest{
  optional int32 multiple=1;//倍数 明牌开始5倍,发牌≤8张时4倍,≤16张时3倍,=17张时2倍
}

// 明牌返回数据(广播)
message DdzMingPaiResponse{
	required int32 seat= 1;             //明牌的玩家座位号
    repeated int32 cards = 2;    	//牌数组
	required Multiple mult = 3;        //倍数详情
	optional int32 totalMultiple = 4;   //总得倍数
	optional int32  mingpaiMultiple=5; //返回明牌倍数
}

// 102105 抢地主
message DdzGrabDzRequest{
	required int32 type = 1;    //抢地主 1；不抢 2；
	required int32 order = 2;   //请求序号，初始为0；后面根据返回数据的order来请求；防止重复请求
	optional int32 state = 3;   //叫地主 1；抢地主 2；
}

// 抢地主返回数据(广播)
message DdzGrabDzResponse{
	required int32 seat= 1;  		    //抢地主玩家的座位号
	required int32 type = 2;  		    //抢地主 1；不抢 2；
	required int32 order = 3;  		    //返回下一个请求序号
	required int32 nextSeat = 4;        //下一个抢地主的座位号-> 为0则结束
	optional GrabResult result = 5;		//下一个座位号为0的时候解析该结果
	optional int32 state = 6;           //叫地主 1；抢地主 2；
	optional int32 grabDzCountdown = 7;   //下家叫地主的倒计时 如果4为0就略过
	optional int32 nextOperType = 8;     // 下家操作的类型 0抢地主 1叫地主
	optional int32 totalMultiple = 9;   //总得倍数
	repeated PlayerScore playerScore = 10; //玩家扣除台费的金币数
	optional Multiple mult = 11;      //倍数详情
}

message PlayerScore{
	optional int32 seat = 1;
	optional int32 ticketCoin = 2;
}



//  抢地主返回结果
message GrabResult{
	required bool result = 1;		   // true 产生地主(1 2 3 4)；false 重新发牌(1 4 5 6 7)
	optional int32 seat= 2;  		   //抢到地主的玩家座位号
	optional int32 laizi = 3;          //根据配置使用->赖子Value 真实牌 2-16
	optional Multiple mult = 4;        //倍数详情
	repeated int32 cards = 5;    	   //牌数组 1-54
	repeated int32 theCards = 6;       //底牌 1-54
	optional int32 initSeat = 7;	   //发牌起点玩家（开始抢地主）
	optional int32 totalMultiple = 8;   //总得倍数
	optional int32 dzFirstOutCardTime = 9;// 选定地主后首次出牌时间 没选出地主忽略
}

// 102106 加倍
message DdzDoubleRequest{	
	required bool type = 1;  // 加倍 true false
}

// 加倍返回数据(广播)
message DdzDoubleResponse{
	required int32 seat= 1;  		//加倍/不加倍的玩家座位号
	required bool type = 2;  		// 加倍 true false
	required Multiple mult = 3;    //倍数详情
	optional int32 totalMultiple = 4;   //总得倍数
	optional int32 countdown = 5; //下个玩家操作的时间
}

// 102107 出牌
message DdzChupaiRequest{
	repeated int32 values = 1;    	 //出的牌Values 1-54 (赖子代表本身自己的value)
	required int32 cardType = 2;  	 //牌类型
	repeated int32 realValues = 3;   //出的牌真实代表值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼) (赖子已经转换为真实代表的牌(可能也代表自己本身))
	optional bool hostingOperating=4; //是否托管操作 前端忽略 
	optional Multiple mult = 6;      //倍数详情
}

//出牌返回数据(广播)
message DdzChupaiResponse{
	required int32 seat = 1;         //出牌的玩家座位号
    repeated int32 values = 2;       //出的牌Values 1-54
	repeated int32 realValues = 3;   //出的牌真实代表值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼)
	required int32 nextSeat = 4;     //下家出牌玩家的座位号 -> 为0 牌局结束
	required Multiple mult = 5;      //倍数详情
	optional int32 cardSize = 6;     //出牌后的数量
	optional int32 totalMultiple = 7;   //总得倍数
	optional int32 countdown = 8; //下个玩家操作时间
	optional bool hostingOutCard = 9; //系统帮助出牌 true 是 false否
}
//required bool type = 5;          //下家是否能跟 true false 由客户端自行判断

// 102108 过牌
message DdzGuoRequest{
    optional bool hostingOperating=1; //是否托管操作 前端忽略
}
//过牌返回数据(广播)
message DdzGuoResponse{
	required int32 seat= 1;          //过的玩家座位号	
	repeated int32 values = 2;       //过的牌Values 1-54
	repeated int32 realValues = 3;   //过的牌真实代表值  2 3 5 6 7 8 9 10 11(J) 12(Q) 13(K) 14(A) 53(小鬼) 54(大鬼)
	required int32 nextSeat = 4;     //下家出牌玩家的座位号
	required int32 guoSeat = 5;		 //过的牌所属的座位号	
	optional int32 countdown = 6;    //下个玩家操作时间
	optional int32 cardSize = 7;    //玩家剩余的牌数
}
//required bool type = 5;          //下家是否能跟 true false 由客户端自行判断

// 102109 退出房间
message DdzExitRequest{
}

message DdzExitResponse{
    required int32 seat = 1;    //退出房间的玩家座位号
    required int32 uid = 2;     //退出房间的玩家UID
    required bool isCreater = 3;//是否开房的玩家 是:房间销毁 否:这个玩家销毁
}

// 102110 解散房间
message DdzDisbandRequest{

}
//(广播)
message DdzDisbandResponse{
    required int32 seat = 1;      //请求解散的玩家座位号
    optional int32 countdown = 2; //倒计时
}

// 102111 同意解散
message DdzDisbandAgreeRequest{
    required bool agree = 1;      //是否同意
}

//同意解散返回消息(广播)
message DdzDisbandAgreeResponse{
    required int32 seat = 1;      //同意解散的玩家座位号
    required bool agree = 2;      //是否同意
}


// 102112 牌局结束(服务器主动推送 广播)
message DdzOverResponse{
    repeated DdzOver ddzOvers = 1;  //结束数据
    optional int32 enterRoomCountdown = 2;//进入房间倒计时
}

message DdzOver{
    required int32 seat = 1;    			//座位号
	required string nickName = 2;           //昵称
	required int32 uid = 3;					//uid
    required Multiple mult = 4;			    //倍数详情
    required int32 score = 5;   			//分数
	required bool chuTian = 6;				//是否春天
	repeated int32 overCards = 7;           //玩家剩余牌 1-54
	repeated DdzBuyMaDetail bmDetail = 8;    //买马详情
	optional int32 isOuter = 9;           //是否属于外围玩家  0 游戏玩家 1 外围玩家
	repeated DdzScoreDetail scoreDetail = 10; //分数详情
	optional int32 changRoom =11; //是否需更换房间  1可在当前场,也可以去高倍场 2去高倍场 3去低倍场
	optional string remindText=12; //提醒文字(暂时没用)
	optional int32 totalMultiple = 13;   //总得倍数
	optional int32 messageType = 14;   //提示消息类型 1触发以小博大 2破产
	optional string message = 15;   //消息
}

message DdzScoreDetail{
	optional string actionName = 1;   //操作类型
	repeated int32 seatList = 2; //操作涉及座位号
	optional int32 score = 3;
}

message DdzBuyMaDetail{
	optional int32 action = 1;      // 买马 1;被买马 2
	optional string actionName = 2; // 常规买马;马对马
	optional int32 cardValue = 3;   // 当前买的马牌
	optional int32 score = 4;       // 买马分数
	optional int32 bmSeat = 5;      // 马牌对应的座位号
	optional int32 index = 6;       // 当前马牌标识
	
}

// 102113 回到大厅
message backHallRequest{
}


// 102114 比赛结束(服务器主动推送)
message DdzMatchResponse{
    repeated DdzMatch matchs = 1;   //比赛结束数据
    optional int32 overTime = 2;     //结束时间
}

message DdzMatch{
    required int32 seat =1;                //座位号
    repeated DdzMatchDetail matchDetails = 2; //详情
    required int32 score = 3;              //分数
    optional bool isFanzhu = 4;            //是否房主
    optional int32 uid = 5;                  //uid
    optional string nickName =6;           //昵称
    optional string avatar = 7;            //头像URL
}

message DdzMatchDetail{
    required int32 type = 1;    //类型(如:1:胜利次数;2:地主次数;3:最大倍数;4:连胜次数;5:买马次数)
    required int32 num = 2;     //数量
}

// 102115 玩家掉线
message OfflineResponse{
    required int32 seat = 1; //掉线玩家座位号
    required int32 uid=2;    //掉线玩家UID
}

// 102116 玩家进房间广播 
message DdzSitDownResponse{
    required DdzPlayer Player = 1;//玩家信息
}


// 102117 地主开局出牌
message DdzKaijuResponse{
    required int32 dzSeat = 1; //地主出牌
}

// 102118 买马
message DdzBuyMaRequest{
	optional int32 buyNum = 1;     //买马数量
	
}
//( 买马 广播)
message DdzBuyMaResponse{
    optional int32 uid = 1;             //uid 买马玩家uid
	optional int32 seat = 2;        	//买马座位号
	repeated DdzBuyMaList bmList = 3;   //马牌信息
}

message DdzBuyMaList{
	optional int32 cardValue = 1;     //马牌的value 真实牌2-16
	optional int32 bmSeat = 2;        //马牌对应座位号
	
}

// 102119 申请看牌
message DdzApplyLookCardRequest{
    optional int32 uid = 1;           //外围玩家uid
	optional int32 applyUid = 2;      //申请观看玩家uid
	optional int32 applySeat = 3;      //申请观看玩家Seat
}
// 申请看牌 广播
message DdzApplyLookCardResponse{
	optional int32 uid = 1;           //外围玩家uid
	optional int32 applyUid = 2;      //申请观看玩家uid
	optional int32 applySeat = 3;     //申请观看玩家Seat
    optional bool  agree = 4;         //游戏玩家是否同意 true false
}

// 102120 外围玩家申请看牌请求(推送单个玩家)
message DdzApplyToSeatResponse{
	optional int32 uid = 1;           //外围玩家uid
	optional int32 applyUid = 2;      //申请观看玩家uid
	optional int32 applySeat = 3;     //申请观看玩家Seat
	
}

//102121 同意/拒绝 看牌
message DdzLookCardArgeeRequest{
	optional int32 uid = 1;           //外围玩家uid
	optional int32 applyUid = 2;      //申请观看玩家uid
	optional int32 applySeat = 3;     //申请观看玩家Seat
    optional bool agree = 4;         //是否同意 true false
}
 //同意/拒绝 看牌 广播
message DdzLookCardArgeeResponse{
    optional bool agree = 1;          //是否同意 true false
	optional int32 uid = 2;           //外围玩家uid
	optional int32 applyUid = 3;      //同意/拒绝 uid
	optional int32 applySeat = 4;     //同意/拒绝 Seat
}

// 102122 投票踢出外围玩家
message DdzVoteOutRequest{
	optional int32 uid = 2;           //外围玩家uid
}
// 投票踢出外围玩家 广播
message DdzVoteOutResponse{
    optional int32 seat = 1;         //请求投票踢出的玩家座位号
	optional int32 uid = 2;           //投票踢出的外围玩家uid
    optional int32 countdown = 3;    //倒计时
}

// 102123 是否同意投票踢出
message DdzVoteOutAgreeRequest{
    optional bool agree = 1;      //是否同意
	optional int32 uid = 2;        //投票踢出的外围玩家uid
}

//  是否同意踢出 (广播)
message DdzVoteOutAgreeResponse{
    optional int32 seat = 1;      //同意踢出的玩家座位号
    optional bool agree = 2;      //是否同意
	optional int32 uid = 3;        //投票踢出的外围玩家uid
}


//102124 推送踢出外围玩家 广播
message DdzOuterKickOutResponse{
	optional int32 uid = 1;      //踢出的外围玩家uid
	optional bool agree = 2;      //同意/拒绝
}

// 102125 获取外围面板管理状态 
message DdzPanelStatusRequest{
   
}
message DdzPanelStatusResponse{
	repeated DdzPanelList pList = 1;       	
}
message DdzPanelList{
	optional int32 uid = 1;    //外围玩家uid
	optional int32 watchType = 2;    //看牌状态  0 尚未申请； 1 同意/拒绝看牌(有人申请看牌)；2 拒绝看牌(有人在看牌)；
	optional int32 voteType = 3;     //投票状态  0 投票踢出； 1 同意/拒绝踢出(别人发起投票)；2 等待投票(已经投票)
	optional int32 countdown = 4;    //倒计时
}


// 102126 GPS推送数据
message DdzLocationResponse{
    repeated DdzLocation ddzLocation = 1; //其他三家玩家
}
//GPS位置数据
message DdzLocation{
    required int32 seata = 1;     //座位号a
    required int32 seatb = 2;     //座位号b
    required bool isOpena = 3;    //a是否打开GPS
    required bool isOpenb = 4;    //b是否打开GPS
    required int32 distance = 5;  //a和b的距离(米)
}


// 广播 102127 通知有玩家开启托管
message DdzjGameHostingResponse{
	required int32 seat = 1;      //托管的玩家座位号
  required int32 uid = 2;   
	
}

// 102128 取消托管
message DdzGameCancelHostingRequest{
	
}
// 广播 
message DdzGameCancelHostingResponse{
	  required int32 seat = 1;      //取消托管的玩家座位号
    required int32 uid = 2;   
    optional int32 robotCountdown = 3;
}

// 102129 继续游戏
message DdzGameContinueGameRequest{
	required int32 type = 1; //房间类型
	optional string roomId = 2; //原房间号
	optional int32 cfgId = 3; //
	optional bool upgrade = 4;//是否升降场 true高倍场  false继续游戏
}

message DdzGameContinueGameResponse{
	  required DdzRoom room = 1;           //房间信息
    repeated DdzPlayer Player = 2;       //玩家信息
    optional RoomConfig roomConfig = 3;  //房间配置
    required string roomId = 4;  
}

// 102130 玩家申请托管
message DdzGameApplyHostingRequest{
	
	
}

//通知有玩家申请托管
message DdzGameApplyHostingResponse{
	required int32 seat = 1;      //托管的玩家座位号
  required int32 uid = 2;   
}








